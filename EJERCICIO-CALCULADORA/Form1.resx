<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EkX5H3GO9SQ7kVG3AAAAAElFTkSuQmCC
</value>
  </data>
</root>